// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

// - анкеты людей (имя, описание, фото, город,
//   интересы);
// - посты (описание, медиа, хэштеги, лайки,
//   просмотры, комментарии);
// - личные сообщения и чаты (только текст и
//   прочитанность сообщений);
// - отношения (друзья, подписчики, любовные
//   отношения);
// - медиа (фото, аудио, видео).

Table users {
  id integer [primary key]
  name varchar
  description text
  photo integer
  city varchar
  interests text
  created_at timestamp
}

Table follows {
  following_id integer
  followed_id integer
  created_at timestamp
}
Table loves {
  loving_id integer
  loved_id integer
  created_at timestamp
}
Table friends {
  friend1_id integer
  friend2_id integer
  created_at timestamp
}

Table chats {
  id integer [primary key]
  user_id integer
  name varchar
  created_at timestamp
}
Table chats_users {
  chat_id integer
  user_id integer
  created_at timestamp
}
Table messages {
  id integer [primary key]
  user_id integer
  chat_id integer
  text text
  is_read bool
}

Table posts {
  id integer [primary key]
  user_id integer
  description text
  media integer [note: 'Link to content']
  likes integer
  views integer
  created_at timestamp
}
Table tags {
  id integer [primary key]
  name varchar
  created_at timestamp
}
Table posts_tags {
  post_id integer
  tag_id integer
  created_at timestamp
}
Table comments {
  id integer [primary key]
  user_id integer
  post_id integer
  name varchar
  text text
  created_at timestamp
}

table some_media_store {
  id integer [primary key]
  data media
}

Ref: users.id < posts.user_id // one-to-many

Ref: posts.id < posts_tags.post_id
Ref: tags.id < posts_tags.tag_id
Ref: comments.user_id < users.id
Ref: comments.post_id < posts.id

Ref: users.id < chats.user_id
Ref: chats.id < chats_users.chat_id
Ref: users.id < chats_users.user_id
Ref: chats.id < messages.chat_id
Ref: users.id < messages.user_id

Ref: users.id < follows.following_id
Ref: users.id < follows.followed_id
Ref: users.id < loves.loving_id
Ref: users.id < loves.loved_id
Ref: users.id < friends.friend1_id
Ref: users.id < friends.friend2_id

Ref: posts.media - some_media_store.id
Ref: users.photo - some_media_store.id
